input {
  beats {
    port => 5044
  }
}

filter {

    # 1. Parse the main JSON log line
    json {
        source => "message"
        target => "parsed"
        remove_field => ["message"]
    }

    # 2. Extract timestamp (properly)
    date {
        match => [ "[parsed][@timestamp]", "ISO8601" ]
        target => "@timestamp"
        remove_field => ["[parsed][@timestamp]"]
    }

    # 3. Handle Brave tracer JSON-in-JSON
    if [parsed][message] == "brave.Tracer" and [parsed][message] =~ /^{.*}$/ {
      json {
        source => "[parsed][message]"
        target => "[brave]"
        remove_field => ["[parsed][message]"]
      }
    }

    # Remove unnecessary fields
    # 4. Standardize field names (ECS compliance)
    mutate {
       rename => {
            "[parsed][level]" => "[log][level]"
            "[parsed][thread_name]" => "[log][thread]"
            "[parsed][logger_name]" => "[log][logger]"

            "[brave][traceId]" => "[trace][id]"
            "[brave][id]" => "[span][id]"
            "[brave][parentId]" => "[trace][parent_id]"
            "[brave][name]" => "[event][action]"
            "[brave][kind]" => "[event][kind]"
            "[brave][duration]" => "[event][duration]"
      }

      add_field => {
            "[ecs][version]" => "1.6.0"
            "[event][dataset]" => "tracking.logs"
      }
    }


      # 5. Clean up stack traces
      if [parsed][stack_trace] {
        mutate {
          gsub => [
            "[parsed][stack_trace]", "\r\n", " ",
            "[parsed][stack_trace]", "\n", " ",
            "[parsed][stack_trace]", "\t", "  "
          ]
        }
      }


    # 6. Remove unnecessary fields
    #  mutate {
    #    remove_field => [
    #      "host", "agent", "ecs", "input", "log", "tags",
    #      "event", "@version", "version", "[parsed][@version]",
    #      "[parsed][version]"
    #    ]
    #  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "tracking-logs-%{+YYYY.MM.dd}"
    document_type => "_doc"
  }

  # Enable for debugging
  stdout {
    codec => rubydebug
  }
}