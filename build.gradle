plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.raksmey.dev'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url = uri("http://localhost:8081/repository/maven-releases/")
		allowInsecureProtocol = true
		credentials {
			username = project.findProperty("nexusUsername") ?: "admin"
			password = project.findProperty("nexusPassword") ?: "admin"
		}
	}
	maven {
		url = uri("http://localhost:8081/repository/maven-snapshots/")
		allowInsecureProtocol = true
		credentials {
			username = project.findProperty("nexusUsername") ?: "admin"
			password = project.findProperty("nexusPassword") ?: "admin"
		}
	}
}

dependencies {
	// Core Spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator' // ✅ ADDED

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// ✅ CORRECT Tracing Dependencies (let Spring Boot manage versions)
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation 'io.zipkin.reporter2:zipkin-sender-urlconnection'

	// ✅ REQUIRED Core Dependencies
	implementation 'io.micrometer:micrometer-observation'
	implementation 'io.micrometer:context-propagation'

	// Other
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
}

// ✅ REMOVE this - it's causing version conflicts!
// dependencyManagement {
//     imports {
//         mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//     }
// }

tasks.named('test') {
	useJUnitPlatform()
}